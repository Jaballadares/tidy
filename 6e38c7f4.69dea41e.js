(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{79:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return m})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return u}));var a=n(3),r=n(7),i=(n(0),n(97)),o={id:"tidy_moment",title:"tidy-moment API",sidebar_label:"tidy-moment API"},m={unversionedId:"tidy-moment/tidy_moment",id:"tidy-moment/tidy_moment",isDocsHomePage:!1,title:"tidy-moment API",description:"Dependency: moment >= 2.0.0",source:"@site/docs/tidy-moment/tidy-moment.md",slug:"/tidy-moment/tidy_moment",permalink:"/tidy/docs/tidy-moment/tidy_moment",editUrl:"https://github.com/pbeshai/tidy/docs/tidy-moment/tidy-moment.md",version:"current",lastUpdatedBy:"Andy Reagan",lastUpdatedAt:1617300542,sidebar_label:"tidy-moment API",sidebar:"docs",previous:{title:"Tidy Math API",permalink:"/tidy/docs/api/math"}},c=[{value:"summarizeMomentGranularity",id:"summarizemomentgranularity",children:[{value:"Parameters",id:"parameters",children:[]},{value:"Usage",id:"usage",children:[]}]}],s={toc:c};function u(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Dependency: moment >= 2.0.0")),Object(i.b)("p",null,"Note these functions are not included in the core tidy.js package and must be installed separately."),Object(i.b)("h2",{id:"summarizemomentgranularity"},"summarizeMomentGranularity"),Object(i.b)("p",null,"Summarizes input data into bins set by a granularity (day, week, month, year) of UTC moment dates. Assumes input data is by day. By default uses ",Object(i.b)("inlineCode",{parentName:"p"},"date")," and ",Object(i.b)("inlineCode",{parentName:"p"},"timestamp")," as the keys to track the date, but can be configured via options."),Object(i.b)("p",null,"Typically used as a precursor to a moving average computed by a subsequence ",Object(i.b)("inlineCode",{parentName:"p"},"mutate({ value: roll(...) })")," command."),Object(i.b)("h3",{id:"parameters"},"Parameters"),Object(i.b)("h4",{id:"granularity"},Object(i.b)("inlineCode",{parentName:"h4"},"granularity")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts"}),"  | 'd'\n  | 'days'\n  | 'w'\n  | 'weeks'\n  | 'm'\n  | 'months'\n  | 'q'\n  | 'quarters'\n  | 'y'\n  | 'years'\n")),Object(i.b)("h4",{id:"summarizespec"},Object(i.b)("inlineCode",{parentName:"h4"},"summarizeSpec")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts"}),"{\n  [string /* key in output */]: (items: object[]) => any\n}\n")),Object(i.b)("p",null,"Mapping from key to summary functions, the same as used in ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"#summarize"}),Object(i.b)("strong",{parentName:"a"},"summarize")),"."),Object(i.b)("h4",{id:"options"},Object(i.b)("inlineCode",{parentName:"h4"},"options?")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts"}),"{\n  dateKey?: string = 'date',\n  timestampKey?: string = 'timestamp',\n  rest?: (key: string) => (items: object[]) => any\n}\n")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"dateKey = 'date'"),": The key in the input objects where the UTC moment dates are stored. Will be modified to be at the specified granularity."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"timestampKey = 'timestamp'"),": An ISO string of the rolled up date will be saved on this key."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"rest = first"),": The same as used in ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"#summarize"}),Object(i.b)("strong",{parentName:"a"},"summarize")),", defaults to first value encountered.")),Object(i.b)("h3",{id:"usage"},"Usage"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"const data = [\n  { str: 'foo', date: moment.utc('2020-01-01'), value: 3 },\n  { str: 'foo', date: moment.utc('2020-01-03'), value: 1 },\n  { str: 'bar', date: moment.utc('2020-01-10'), value: 3 },\n  { str: 'bar', date: moment.utc('2020-01-21'), value: 1 },\n  { str: 'bar', date: moment.utc('2020-01-29'), value: 2 },\n  { str: 'bar', date: moment.utc('2020-02-01'), value: 5 },\n];\n\ntidy(\n  data,\n  summarizeMomentGranularity('weeks', { value: sum('value') })\n);\n// output:\n[\n  {\n    value: 4,\n    str: 'foo',\n    date: moment.utc('2019-12-30'),\n    timestamp: '2019-12-30T00:00:00.000Z',\n  },\n  {\n    value: 3,\n    str: 'bar',\n    date: moment.utc('2020-01-06'),\n    timestamp: '2020-01-06T00:00:00.000Z',\n  },\n  {\n    value: 1,\n    str: 'bar',\n    date: moment.utc('2020-01-20'),\n    timestamp: '2020-01-20T00:00:00.000Z',\n  },\n  {\n    value: 7,\n    str: 'bar',\n    date: moment.utc('2020-01-27'),\n    timestamp: '2020-01-27T00:00:00.000Z',\n  },\n]\n")))}u.isMDXComponent=!0},97:function(e,t,n){"use strict";n.d(t,"a",(function(){return l})),n.d(t,"b",(function(){return p}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function m(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=r.a.createContext({}),u=function(e){var t=r.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):m(m({},t),e)),n},l=function(e){var t=u(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},b=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),l=u(n),b=a,p=l["".concat(o,".").concat(b)]||l[b]||d[b]||i;return n?r.a.createElement(p,m(m({ref:t},s),{},{components:n})):r.a.createElement(p,m({ref:t},s))}));function p(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=b;var m={};for(var c in t)hasOwnProperty.call(t,c)&&(m[c]=t[c]);m.originalType=e,m.mdxType="string"==typeof e?e:a,o[1]=m;for(var s=2;s<i;s++)o[s]=n[s];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);